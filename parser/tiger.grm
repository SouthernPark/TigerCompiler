structure A = Absyn

%%
%term
    EOF 
  | ID of string
  | INT of int | STRING of string 
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK 
  | LBRACE | RBRACE | DOT 
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF 
  | BREAK | NIL
  | FUNCTION | VAR | TYPE 

%nonterm  exp | program of A.exp

%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE 
	DO OF NIL

%prefer THEN ELSE LPAREN

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%%

program	: exp				(exp)

	
exp: NIL		(A.NilExp)
   | lvalue

decs: dec                                                             ()
    | decs dec                                                        ()
    |                                                                 ()

dec: tydec                                                            ()
   | vardec                                                           ()
   | fundec                                                           ()
	
tydec: TYPE ID EQ ty                                                  ()

ty: ID                                                                ()
  | LBRACE tyfields RBRACE                                            ()
  | ARRAY OF ID                                                       ()

tyfields: ID COLON ID                                                 ()
        | ID COLON ID COMMA tyfields                                  ()
        |                                                             ()

vardec: VAR ID ASSIGN exp                                             (A.VarDec({name = Symbol.symbol(), escape = ref true, typ = Symbol.symbol(), init = .., pos = ..}))
      | VAR ID COLON ID ASSIGN exp                                    ()

fundec: FUNCTION ID LPAREN typefields RPAREN EQ exp                   ()
      | FUNCTION ID LPAREN typefields RPAREN COLON ID EQ exp          ()

lvalue: ID                                                            ()
      | lvalue DOT ID                                                 ()
      | lvalue LBRACK exp RBRACK                                      ()